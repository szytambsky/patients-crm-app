server:
  port: 7950
# todo: Eureka / Discovery Client
auth.service.url: ${AUTH_SERVICE_URL}
spring:
  application:
    name: api-gateway
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:redis}
      port: ${SPRING_DATA_REDIS_PORT:6379}
  cloud:
    gateway:
      server:
        webflux:
          default-filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.burstCapacity: 5
                redis-rate-limiter.replenishRate: 5
                key-resolver: "#{@ipKeyResolver}"
          routes:
            # Route for 7950/auth/** to auth-service
            - id: auth-service-route
              uri: http://auth-service:8079
              predicates:
                - Path=/auth/**
              filters:
                - StripPrefix=1

            # Route for /api/patients/** to patient-service
            - id: patient-service-route
              uri: http://patient-service:8080
              predicates:
                - Path=/api/patients/**
              filters:
                - StripPrefix=1
                - JwtValidation #JwtValidationGatewayFilterFactory

            # Route for http://localhost:7950/api-docs/patients to patient-service /v3/api-docs
            - id: api-docs-patient-route
              uri: http://patient-service:8080
              predicates:
                - Path=/api-docs/patients
              filters:
                - RewritePath=/api-docs/patients, /v3/api-docs

            # Route for http://localhost:7950/api-docs/auth to auth-service /v3/api-docs
            - id: api-docs-auth-route
              uri: http://auth-service:8079
              predicates:
                - Path=/api-docs/auth
              filters:
                - RewritePath=/api-docs/auth, /v3/api-docs